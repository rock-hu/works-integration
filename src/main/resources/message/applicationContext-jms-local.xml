<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd 
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd 
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd 
	http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd 
	http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring-2.8.0.xsd">


	<!-- <bean id="activemqBroker" class="org.apache.activemq.broker.BrokerService" -->
	<!-- init-method="start" destroy-method="stop"> -->
	<!-- <property name="persistent" value="false" /> -->
	<!-- </bean> -->

	<context:property-placeholder location="classpath*:/common/props/jms.properties"
		ignore-unresolvable="true"  />

<!-- 	<bean id="activemqBroker" class="org.apache.activemq.xbean.BrokerFactoryBean" destroy-method="destroy"> -->
<!-- 		<property name="config" value="classpath:/message/activemq.xml" /> -->
<!-- 		<property name="start" value="true" /> -->
<!-- 		<property name="systemExitOnShutdown" value="true" /> -->
<!-- 	</bean> -->

	<bean id="requestQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="queue.request" />
	</bean>

	<bean id="replyQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="queue.reply" />
	</bean>

	<bean id="notifyTopic" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="topic.notify" />
	</bean>

	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="vm://localhost" />
		<property name="useAsyncSend" value="true" />
	</bean>

	<bean id="topicConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="vm://localhost" />
		<property name="clientID" value="durableTopicListenerClientId" />
	</bean>

	<bean id="singleConnectionFactory"
		class="org.springframework.jms.connection.SingleConnectionFactory">
		<property name="targetConnectionFactory" ref="connectionFactory" />
	</bean>

	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>

	<bean id="cachingConnectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory" ref="connectionFactory" />
	</bean>

	<bean id="jmsTransactionManager"
		class="org.springframework.jms.connection.JmsTransactionManager">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>

	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
		<property name="defaultDestination" ref="requestQueue" />
		<property name="receiveTimeout" value="1000" />
		<property name="sessionTransacted" value="true" />
	</bean>
	<bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
		<property name="messageConverter" ref="messageConverter" />
		<property name="sessionTransacted" value="true" />
		<property name="defaultDestination" ref="replyQueue" />
		<property name="receiveTimeout" value="1000" />
	</bean>
	<bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
		<property name="defaultDestination" ref="replyQueue" />
		<property name="receiveTimeout" value="1000" />
	</bean>
	<bean id="queueContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="replyQueue" />
		<property name="messageListener" ref="emailNotifyMessageListener" />
		<property name="taskExecutor" ref="taskExecutor" />
		<property name="cacheLevel" value="4" />
		<property name="concurrentConsumers" value="5" />
		<property name="maxConcurrentConsumers" value="10" />
		<property name="sessionAcknowledgeModeName" value="CLIENT_ACKNOWLEDGE" />
	</bean>

	<bean id="topicContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="topicConnectionFactory" />
		<property name="destination" ref="notifyTopic" />
		<property name="messageListener" ref="emailNotifyMessageListener" />
		<property name="subscriptionDurable" value="true" />
		<property name="pubSubDomain" value="true" />
		<property name="durableSubscriptionName" value="durableTopicListenerClientId" />
		<property name="taskExecutor" ref="taskExecutor" />
		<property name="cacheLevel" value="0" />
	</bean>

	<bean id="baseJmsQueueListener" class="org.works.message.listener.BaseJmsQueueListener"></bean>
	<bean id="emailNotifyMessageListener" class="org.works.message.listener.EmailNotifyMessageListener"></bean>
	<bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor">
		<property name="concurrencyLimit" value="50" />
		<property name="threadNamePrefix" value="SERVICE" />
	</bean>

	<bean id="messageConverter"
		class="org.springframework.jms.support.converter.SimpleMessageConverter"></bean>

	<bean id="jmsResourceAdapter" class="org.apache.activemq.ra.ActiveMQResourceAdapter">
		<property name="serverUrl" value="vm://localhost" />
	</bean>

	<bean id="jencksTransactionManager" class="org.jencks.factory.TransactionManagerFactoryBean" />

	<bean id="jencksConnectionManager" class="org.jencks.factory.ConnectionManagerFactoryBean">
		<property name="transactionManager" ref="jencksTransactionManager" />
	</bean>

	<bean id="jmsManagedConnectionFactory" class="org.apache.activemq.ra.ActiveMQManagedConnectionFactory">
		<property name="resourceAdapter" ref="jmsResourceAdapter" />
	</bean>

	<bean id="jmsConnectionFactory" class="org.jencks.factory.ConnectionFactoryFactoryBean">
		<property name="managedConnectionFactory" ref="jmsManagedConnectionFactory" />
		<property name="connectionManager" ref="jencksConnectionManager" />
	</bean>

	<!-- <bean id="client" class="org.logicblaze.lingo.jms.JmsProxyFactoryBean"> -->
	<!-- <property name="serviceInterface" value="org.logicblaze.lingo.example.ExampleService" 
		/> -->
	<!-- <property name="connectionFactory" ref="jmsFactory" /> -->
	<!-- <property name="destination" ref="exampleDestination" /> -->
	<!-- </bean> -->

	<!-- <bean id="server" class="org.logicblaze.lingo.jms.JmsServiceExporter"> -->
	<!-- <property name="service" ref="serverImpl" /> -->
	<!-- <property name="serviceInterface" value="org.logicblaze.lingo.example.ExampleService" 
		/> -->
	<!-- <property name="connectionFactory" ref="jmsFactory" /> -->
	<!-- <property name="destination" ref="exampleDestination" /> -->
	<!-- </bean> -->

	<!-- <bean id="exampleDestination" class="org.apache.activemq.command.ActiveMQQueue"> -->
	<!-- <constructor-arg index="0" -->
	<!-- value="test.org.logicblaze.lingo.example" /> -->
	<!-- </bean> -->
	<!-- <bean id="serverImpl" class="org.logicblaze.lingo.example.ExampleServiceImpl" -->
	<!-- singleton="true" /> -->

</beans>