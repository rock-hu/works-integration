<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:int-ftp="http://www.springframework.org/schema/integration/ftp"
	xmlns:int-sftp="http://www.springframework.org/schema/integration/sftp"
	xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
	xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
	xmlns:int-mail="http://www.springframework.org/schema/integration/mail"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
	xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/integration 
		http://www.springframework.org/schema/integration/spring-integration-2.1.xsd
		http://www.springframework.org/schema/integration/file 
		http://www.springframework.org/schema/integration/file/spring-integration-file-2.1.xsd
		http://www.springframework.org/schema/integration/ftp 
		http://www.springframework.org/schema/integration/ftp/spring-integration-ftp-2.1.xsd
		http://www.springframework.org/schema/integration/sftp 
		http://www.springframework.org/schema/integration/sftp/spring-integration-sftp-2.1.xsd
		http://www.springframework.org/schema/integration/jdbc 
		http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-2.1.xsd
		http://www.springframework.org/schema/integration/jms 
		http://www.springframework.org/schema/integration/jms/spring-integration-jms-2.1.xsd
		http://www.springframework.org/schema/integration/mail 
		http://www.springframework.org/schema/integration/mail/spring-integration-mail-2.1.xsd
		http://www.springframework.org/schema/integration/stream 
		http://www.springframework.org/schema/integration/stream/spring-integration-stream-2.1.xsd
		http://www.springframework.org/schema/integration/xml 
		http://www.springframework.org/schema/integration/xml/spring-integration-xml-2.1.xsd
		http://www.springframework.org/schema/integration/http 
		http://www.springframework.org/schema/integration/http/spring-integration-http-2.1.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
		">


	<context:component-scan base-package="com.works" />




	<int-mail:inbound-channel-adapter id="imapAdapter"
		store-uri="imaps://[username]:[password]@imap.gmail.com/INBOX"
		java-mail-properties="javaMailProperties" channel="recieveChannel"
		should-delete-messages="true" should-mark-messages-as-read="true"
		auto-startup="true">
		<int:poller max-messages-per-poll="1" fixed-rate="5000" />
	</int-mail:inbound-channel-adapter>

	<int-mail:imap-idle-channel-adapter
		id="customAdapter" store-uri="imaps://[username]:[password]@imap.gmail.com/INBOX"
		channel="recieveChannel" auto-startup="true" should-delete-messages="false"
		should-mark-messages-as-read="true" java-mail-properties="javaMailProperties" />


	<util:properties id="javaMailProperties">
		<prop key="mail.imap.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
		<prop key="mail.imap.socketFactory.fallback">false</prop>
		<prop key="mail.store.protocol">imaps</prop>
		<prop key="mail.debug">false</prop>
	</util:properties>

	<int-mail:header-enricher subject="Example Mail"
		to="to@example.org" cc="cc@example.org" bcc="bcc@example.org" from="from@example.org"
		reply-to="replyTo@example.org" overwrite="false" />

	<int-mail:imap-idle-channel-adapter
		id="customAdapter" store-uri="imaps://some_google_address:${password}@imap.gmail.com/INBOX"
		channel="receiveChannel" should-mark-messages-as-read="true"
		java-mail-properties="javaMailProperties" mail-filter-expression="subject matches '(?i).*Spring Integration.*'" />


	<int-jms:inbound-channel-adapter id="jmsIn"
		destination="inQueue" channel="exampleChannel">
		<int:poller fixed-rate="30000" />
	</int-jms:inbound-channel-adapter>
	<int-jms:inbound-channel-adapter id="jmsIn"
		destination="inQueue" channel="exampleChannel" extract-payload="false">
		<int:poller fixed-rate="30000" />
	</int-jms:inbound-channel-adapter>
	<int-jms:message-driven-channel-adapter
		id="jmsIn" destination="inQueue" channel="exampleChannel" />
	<int-jms:message-driven-channel-adapter
		id="jmsIn" destination="inQueue" channel="exampleChannel"
		error-channel="exampleErrorChannel" />
	<int-jms:outbound-channel-adapter id="jmsOut"
		destination="outQueue" channel="exampleChannel" />

	<int-jms:inbound-gateway id="jmsInGateway"
		request-destination="inQueue" request-channel="exampleChannel" />

	<int-jms:inbound-gateway request-destination="requestQueue"
		request-channel="jmsinputchannel" error-channel="errorTransformationChannel" />

	<int:transformer input-channel="exceptionTransformationChannel"
		ref="exceptionTransformer" method="createErrorResponse" />

	<int-jms:outbound-gateway id="jmsOutGateway"
		request-destination="outQueue" request-channel="outboundJmsRequests"
		reply-channel="jmsReplies" />


	<int-jms:inbound-gateway request-destination="requestQueue"
		request-channel="inbound-gateway-channel" message-converter="marshallingMessageConverter" />

	<bean id="marshallingMessageConverter"
		class="org.springframework.jms.support.converter.MarshallingMessageConverter">
		<constructor-arg>
			<bean class="org.bar.SampleMarshaller" />
		</constructor-arg>
		<constructor-arg>
			<bean class="org.bar.SampleUnmarshaller" />
		</constructor-arg>
	</bean>

	<int-jms:channel id="jmsChannel" queue="exampleQueue" />

	<int-jms:publish-subscribe-channel
		id="jmsChannel" topic="exampleTopic" />

	<int-jms:channel id="jmsQueueChannel" queue-name="exampleQueueName" />

	<jms:publish-subscribe-channel id="jmsTopicChannel"
		topic-name="exampleTopicName" />

	<int-jms:channel id="jmsChannel" queue-name="exampleQueueName"
		destination-resolver="customDestinationResolver" connection-factory="customConnectionFactory" />

	<int-jdbc:inbound-channel-adapter
		query="select * from item where status=2" channel="target"
		data-source="dataSource" update="update item set status=10 where id in (:id)" />

	<int-jdbc:inbound-channel-adapter
		query="..." channel="target" data-source="dataSource" update="...">
		<int:poller fixed-rate="1000">
			<int:transactional />
		</int:poller>
	</int-jdbc:inbound-channel-adapter>

	<int-jdbc:outbound-channel-adapter
		query="insert into foos (id, status, name) values (:headers[id], 0, :payload[foo])"
		data-source="dataSource" channel="input" />

	<jdbc:outbound-channel-adapter
		data-source="dataSource" channel="input"
		query="insert into MESSAGES (MESSAGE_ID,PAYLOAD,CREATED_DATE)     \
    values (:id, :payload, :createdDate)"
		sql-parameter-source-factory="spelSource" />

	<bean id="spelSource"
		class="o.s.integration.jdbc.ExpressionEvaluatingSqlParameterSourceFactory">
		<property name="parameterExpressions">
			<map>
				<entry key="id" value="headers['id'].toString()" />
				<entry key="createdDate" value="new java.util.Date()" />
				<entry key="payload" value="payload" />
			</map>
		</property>
	</bean>

	<int-jdbc:outbound-gateway
		update="insert into foos (id, status, name) values (:headers[id], 0, :payload[foo])"
		request-channel="input" reply-channel="output" data-source="dataSource" />

	<int-jdbc:outbound-gateway
		update="insert into foos (status, name) values (0, :payload[foo])"
		request-channel="input" reply-channel="output" data-source="dataSource"
		keys-generated="true" />

	<int-jdbc:outbound-gateway
		update="insert into foos (id, status, name) values (:headers[id], 0, :payload[foo])"
		query="select * from foos where id=:headers[$id]" request-channel="input"
		reply-channel="output" data-source="dataSource" />

	<int-jdbc:message-store id="messageStore"
		data-source="dataSource" />

	<int-jdbc:message-store id="messageStore"
		data-source="dataSource" lob-handler="lobHandler" table-prefix="MY_INT_" />

	<int-jdbc:stored-proc-outbound-channel-adapter
		data-source="dataSource" channel="insertCoffeeProcedureRequestChannel"
		stored-procedure-name="INSERT_COFFEE" />

	<int-jdbc:stored-proc-outbound-gateway
		id="outbound-gateway-storedproc-find-all" data-source="dataSource"
		request-channel="findAllProcedureRequestChannel" expect-single-result="true"
		stored-procedure-name="FIND_ALL_COFFEE_BEVERAGES">
		<int-jdbc:returning-resultset name="coffeeBeverages"
			row-mapper="org.springframework.integration.support.CoffeBeverageMapper" />
	</int-jdbc:stored-proc-outbound-gateway>

	<int-jdbc:stored-proc-outbound-gateway
		id="outbound-gateway-storedproc-find-coffee" data-source="dataSource"
		request-channel="findCoffeeProcedureRequestChannel"
		skip-undeclared-results="true" stored-procedure-name="FIND_COFFEE"
		expect-single-result="true">
		<int-jdbc:parameter name="ID" expression="payload" />
	</int-jdbc:stored-proc-outbound-gateway>


</beans>		