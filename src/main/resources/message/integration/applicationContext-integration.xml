<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:int-ftp="http://www.springframework.org/schema/integration/ftp"
	xmlns:int-sftp="http://www.springframework.org/schema/integration/sftp"
	xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
	xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
	xmlns:int-mail="http://www.springframework.org/schema/integration/mail"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:int-jmx="http://www.springframework.org/schema/integration/jmx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration-2.2.xsd
		http://www.springframework.org/schema/integration/file 
		http://www.springframework.org/schema/integration/file/spring-integration-file-2.2.xsd
		http://www.springframework.org/schema/integration/ftp 
		http://www.springframework.org/schema/integration/ftp/spring-integration-ftp-2.2.xsd
		http://www.springframework.org/schema/integration/sftp 
		http://www.springframework.org/schema/integration/sftp/spring-integration-sftp-2.2.xsd
		http://www.springframework.org/schema/integration/jdbc 
		http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-2.2.xsd
		http://www.springframework.org/schema/integration/jms 
		http://www.springframework.org/schema/integration/jms/spring-integration-jms-2.2.xsd
		http://www.springframework.org/schema/integration/mail 
		http://www.springframework.org/schema/integration/mail/spring-integration-mail-2.2.xsd
 		http://www.springframework.org/schema/integration/stream  
 		http://www.springframework.org/schema/integration/stream/spring-integration-stream-2.2.xsd 
		http://www.springframework.org/schema/integration/http 
		http://www.springframework.org/schema/integration/http/spring-integration-http-2.2.xsd
		http://www.springframework.org/schema/integration/jmx 
		http://www.springframework.org/schema/integration/jmx/spring-integration-jmx-2.2.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                   http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util-3.1.xsd">
	<!-- xmlns:int-stream="http://www.springframework.org/schema/integration/stream" -->
	<!-- http://www.springframework.org/schema/integration/stream -->
	<!-- http://www.springframework.org/schema/integration/stream/spring-integration-stream-2.2.xsd -->
	<!-- xmlns:int-xml="http://www.springframework.org/schema/integration/xml" -->
	<!-- xmlns:int-xml="http://www.springframework.org/schema/integration/xml" -->
	<!-- http://www.springframework.org/schema/integration/xml -->
	<!-- http://www.springframework.org/schema/integration/xml/spring-integration-xml-2.2.xsd -->

	<!-- xmlns:int-ws="http://www.springframework.org/schema/integration/ws" -->
	<!-- http://www.springframework.org/schema/integration/ws -->
	<!-- http://www.springframework.org/schema/integration/ws/spring-integration-ws-2.2.xsd -->



	<context:component-scan base-package="com.works" />


	<int:channel id="ftpOutputChannel" />
	<int:channel id="ftpInputChannel" />

	<int:channel id="sftpOutputChannel" />
	<int:channel id="sftpInputChannel" />


	<int:channel id="xmlObjects" />

	<int:channel id="outboundMail" />
	<int:channel id="inbondMail" />

	<int:channel id="requests" />
	<int:channel id="recieveChannel" />
	<int:channel id="demoChannel" />
	<int:channel id="jmsinToStdoutChannel" />
	<int:channel id="stdinToJmsoutChannel" />
	<int:channel id="jmsReplyToStdoutChannel" />
	<int:channel id="ordersChannel" />
	<int:channel id="stockCheckerChannel" />
	<int:channel id="orderRoutingChannel" />
	<int:channel id="warehouseDispatchChannel" />
	<int:channel id="outOfStockChannel" />
	<int:channel id="resupplyOrderChannel" />
	<int:channel id="controlChannel" />
	<int:channel id="adapterOutputChanel">
		<int:queue />
	</int:channel>
	<int:channel id="recieveChannel" />
	<int:channel id="input" />



	<int-sftp:inbound-channel-adapter id="sftpInboundAdapter"
		channel="sftpInputChannel" filename-pattern="*.xml" session-factory="sftpClientFactory"
		auto-create-local-directory="true" delete-remote-files="false"
		charset="UTF-8" remote-file-separator="\" auto-startup="true"
		cache-sessions="true" remote-directory="/home/rock-hu/data/sftp"
		local-directory="/develop/data/outgoing" />
	<int-sftp:outbound-channel-adapter
		id="sftpOutboundAdapter" channel="sftpOutputChannel" session-factory="sftpClientFactory"
		auto-create-directory="false" remote-directory="/home/rock-hu/data/sftp"
		remote-filename-generator="defaultFileNameGenerator" />
	<int-ftp:inbound-channel-adapter id="ftpInboundAdapter"
		channel="ftpInputChannel" filename-pattern="*.csv" session-factory="ftpClientFactory"
		auto-create-local-directory="true" delete-remote-files="false"
		charset="UTF-8" remote-file-separator="\" auto-startup="true"
		cache-sessions="true" remote-directory="/develop/data/outgoing"
		local-directory="/develop/data/outgoing" />
	<int-ftp:outbound-channel-adapter id="ftpOutboundAdapter"
		channel="ftpOutputChannel" session-factory="ftpClientFactory"
		auto-create-directory="false" remote-directory="/home/rock-hu/data/ftp"
		remote-filename-generator="defaultFileNameGenerator" />
	<int:poller id="defaultPoller" default="true"
		max-messages-per-poll="5" fixed-rate="1000" />
	<int-file:file-to-string-transformer
		id="fileToString1" input-channel="ftpInputChannel" output-channel="ftpOutputChannel"
		delete-files="true" />
	<int-file:file-to-string-transformer
		id="fileToString2" input-channel="sftpInputChannel" output-channel="sftpOutputChannel"
		delete-files="true" />


	<!-- <xml:unmarshalling-transformer -->
	<!-- unmarshaller="xmlMarshaller" input-channel="fileContent" -->
	<!-- output-channel="xmlObjects" /> -->
	<!-- MAIL -->
	<!-- <int-mail:outbound-channel-adapter -->
	<!-- channel="outboundMail" mail-sender="javaMailSender" /> -->

	<!-- <int-mail:outbound-channel-adapter -->
	<!-- channel="outboundMail" host="localhost" username="cchu" password="cchu" 
		/> -->



	<!-- replace 'userid and 'password' wit the real values -->
	<!-- <int-mail:inbound-channel-adapter id="pop3ShouldDeleteTrue" -->
	<!-- store-uri="pop3://cchu:cchu@pop.localhost/INBOX" channel="recieveChannel" -->
	<!-- should-delete-messages="true" auto-startup="true" -->
	<!-- java-mail-properties="mailProps"> -->
	<!-- Will poll every 20 seconds -->

	<!-- </int-mail:inbound-channel-adapter> -->


	<!-- replace 'userid and 'password' wit the real values -->
	<!-- <int-mail:imap-idle-channel-adapter -->
	<!-- id="customAdapter" store-uri="imaps://[userid]:[pasword]@imap.gmail.com:993/inbox" -->
	<!-- channel="recieveChannel" auto-startup="true" should-delete-messages="false" -->
	<!-- should-mark-messages-as-read="false" java-mail-properties="mailProps" 
		/> -->

	<!-- <stream:stdout-channel-adapter -->
	<!-- id="stdoutAdapterWithDefaultCharset" channel="xmlObjects" /> -->



	<bean id="defaultFileNameGenerator"
		class="org.springframework.integration.file.DefaultFileNameGenerator" />
	<!-- <int-jmx:attribute-polling-channel-adapter -->
	<!-- channel="seconds" -->
	<!-- object-name="org.springframework.integration.samples.jmx:type=StopWatch,name=stopWatch" -->
	<!-- attribute-name="Seconds"> -->
	<!-- </int-jmx:attribute-polling-channel-adapter> -->

	<!-- <int:publish-subscribe-channel id="seconds" /> -->

	<!-- <int-stream:stdout-channel-adapter -->
	<!-- channel="seconds" append-newline="true" /> -->

	<!-- <int:filter input-channel="seconds" expression="payload >= 10" -->
	<!-- output-channel="reset" /> -->

	<!-- <int-jmx:operation-invoking-channel-adapter -->
	<!-- id="reset" -->
	<!-- object-name="org.springframework.integration.samples.jmx:type=StopWatch,name=stopWatch" -->
	<!-- operation-name="reset" /> -->

	<!-- <int-jms:message-driven-channel-adapter -->
	<!-- id="jmsin" destination="requestQueue" channel="jmsinToStdoutChannel" 
		/> -->



	<!-- <int-stream:stdout-channel-adapter -->
	<!-- id="stdout" channel="jmsinToStdoutChannel" append-newline="true" /> -->

	<!-- <int-jms:inbound-gateway id="jmsin" -->
	<!-- request-destination="requestQueue" request-channel="demoChannel" /> -->



	<!-- <int:service-activator input-channel="demoChannel" -->
	<!-- ref="demoBean" /> -->

	<!-- <int-stream:stdin-channel-adapter id="stdin" -->
	<!-- channel="stdinToJmsoutChannel" /> -->



	<!-- <int-jms:outbound-channel-adapter id="jmsout" -->
	<!-- channel="stdinToJmsoutChannel" destination="requestQueue" /> -->

	<!-- <int-stream:stdin-channel-adapter id="stdin" -->
	<!-- channel="stdinToJmsoutChannel" /> -->



	<!-- <int-jms:outbound-gateway request-channel="stdinToJmsoutChannel" -->
	<!-- request-destination="requestQueue" reply-channel="jmsReplyToStdoutChannel" 
		/> -->



	<!-- <int-stream:stdout-channel-adapter -->
	<!-- channel="jmsReplyToStdoutChannel" append-newline="true" /> -->


	<util:map id="orderNamespaceMap">
		<entry key="orderNs" value="http://www.example.org/orders" />
		<entry key="productNs" value="http://www.example.org/prodcuts" />
	</util:map>


	<!-- <int-xml:xpath-splitter id="orderItemSplitter" -->
	<!-- input-channel="ordersChannel" output-channel="stockCheckerChannel" -->
	<!-- create-documents="true"> -->
	<!-- <int-xml:xpath-expression expression="/orderNs:order/orderNs:orderItem" -->
	<!-- namespace-map="orderNamespaceMap" /> -->
	<!-- </int-xml:xpath-splitter> -->

	<!-- <int:service-activator input-channel="stockCheckerChannel" -->
	<!-- output-channel="orderRoutingChannel"> -->
	<!-- <bean class="org.springframework.integration.samples.xml.StockChecker"> -->
	<!-- <constructor-arg ref="selectIsbnXpath" /> -->
	<!-- </bean> -->
	<!-- </int:service-activator> -->

	<!-- <int-xml:xpath-expression id="selectIsbnXpath" -->
	<!-- namespace-map="orderNamespaceMap" expression="/orderNs:orderItem/orderNs:isbn/text()" 
		/> -->

	<!-- <int-xml:xpath-router id="instockRouter" -->
	<!-- input-channel="orderRoutingChannel" resolution-required="true"> -->
	<!-- <int-xml:xpath-expression expression="/orderNs:orderItem/@in-stock" -->
	<!-- namespace-map="orderNamespaceMap" /> -->
	<!-- <int-xml:mapping value="true" channel="warehouseDispatchChannel" /> -->
	<!-- <int-xml:mapping value="false" channel="outOfStockChannel" /> -->
	<!-- </int-xml:xpath-router> -->

	<!-- <int:outbound-channel-adapter method="dispatch" -->
	<!-- channel="warehouseDispatchChannel"> -->
	<!-- <bean class="org.springframework.integration.samples.xml.WarehouseDispatch" 
		/> -->
	<!-- </int:outbound-channel-adapter> -->

	<!-- <int-xml:xslt-transformer input-channel="outOfStockChannel" -->
	<!-- output-channel="resupplyOrderChannel" -->
	<!-- xsl-resource="classpath:/META-INF/spring/integration/bigBooksSupplierTransformer.xsl" 
		/> -->

	<!-- <int:outbound-channel-adapter method="orderResupply" -->
	<!-- channel="resupplyOrderChannel"> -->
	<!-- <bean class="org.springframework.integration.samples.xml.ExternalResupply" 
		/> -->
	<!-- </int:outbound-channel-adapter> -->

	<!-- Web Service -->
	<!-- <int:chain input-channel="fahrenheitChannel" output-channel="celsiusChannel"> -->
	<!-- <int-ws:header-enricher> -->
	<!-- <int-ws:soap-action value="http://tempuri.org/FahrenheitToCelsius" 
		/> -->
	<!-- </int-ws:header-enricher> -->
	<!-- <int-ws:outbound-gateway -->
	<!-- uri="http://www.w3schools.com/webservices/tempconvert.asmx" /> -->
	<!-- </int:chain> -->

	<!-- The response from the service is logged to the console. -->
	<!-- <int-stream:stdout-channel-adapter -->
	<!-- id="celsiusChannel" /> -->


	<!-- <int-ws:inbound-gateway id="ws-inbound-gateway" -->
	<!-- request-channel="input" /> -->

	<!-- <int:service-activator input-channel="input"> -->
	<!-- <bean class="org.springframework.integration.samples.ws.SimpleEchoResponder" 
		/> -->
	<!-- </int:service-activator> -->

	<!-- Control bus -->
	<!-- <int:control-bus input-channel="controlChannel" /> -->
	<!-- <int:inbound-channel-adapter id="inboundAdapter" -->
	<!-- channel="adapterOutputChanel" expression="'Hello'" auto-startup="false"> -->
	<!-- </int:inbound-channel-adapter> -->

	<int:logging-channel-adapter id="logger"
		level="INFO"
		expression="'Id:' + payload.id + '; Date:' + payload.createdAt + '; FromUser: ' + payload.fromUser" />



<!-- 	<import resource="classpath:message/integration/business/chain.xml" /> -->
<!-- 	<import resource="classpath:message/integration/business/flightStatus.xml" /> -->
<!-- 	<import -->
<!-- 		resource="classpath:message/integration/business/notificationPublisher.xml" /> -->

</beans>		